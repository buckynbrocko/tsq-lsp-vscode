{
  "name": "tsq-lsp-vscode",
  "displayName": "VSCode tree-sitter Development",
  "description": "An extension to aid in development of tree-sitter grammars",
  "version": "0.0.1",
  "main": "./client/out/extension",
  "dependencies": {
    "@types/node": "^22.14.1",
    "typescript": "^5.8.3"
  },
  "devDependencies": {
    "@types/jest": "^30.0.0",
    "jest": "^30.0.3",
    "ts-jest": "^29.4.0"
  },
  "scripts": {
    "compile": "tsc -b",
    "watch": "tsc -b -w",
    "postinstall": "cd client && npm install && cd ../server && npm install && cd .."
  },
  "engines": {
    "vscode": "^1.99.0"
  },
  "categories": [
    "Programming Languages"
  ],
  "activationEvents": [
    "workspaceContains:queries/**/*.scm",
    "workspaceContains:queries/**/*.scheme",
    "workspaceContains:**/*.scm",
    "workspaceContains:**/*.scheme",
    "onStartupFinished"
  ],
  "contributes": {
    "snippets": [
      {
        "language": "tree-sitter-query",
        "path": "snippets/snippets.code-snippets"
      }
    ],
    "languages": [
      {
        "id": "tree-sitter-query",
        "aliases": [
          "tree-sitter Query"
        ],
        "extensions": [
          ".scm",
          ".scheme"
        ],
        "configuration": "server/src/language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "tree-sitter-query",
        "scopeName": "source.tree-sitter-query",
        "path": "server/src/syntaxes/tree-sitter-query.tmLanguage.json"
      }
    ],
    "commands": [
      {
        "command": "tsq-lsp-vscode.print-document-tree",
        "title": "Print Document Tree"
      },
      {
        "command": "tsq-lsp-vscode.refresh-semantic-tokens",
        "title": "Refresh Semantic Tokens"
      },
      {
        "command": "tsq-lsp-vscode.reload-node-types",
        "title": "Reload Node Types"
      }
    ],
    "configuration": {
      "title": "tsq-lsp-vscode",
      "type": "object",
      "properties": {
        "tsq-lsp-vscode.formatting.anchors.forceOntoNewline": {
          "type": "boolean",
          "default": false
        },
        "tsq-lsp-vscode.formatting.anchors.spaceBeforeClose": {
          "type": "boolean",
          "default": false
        },
        "tsq-lsp-vscode.formatting.comments.allowInline": {
          "type": "boolean",
          "default": true
        },
        "tsq-lsp-vscode.formatting.groupings.maxInlineChildren": {
          "type": [
            "number",
            "null"
          ],
          "minimum": 0,
          "default": 2
        },
        "tsq-lsp-vscode.formatting.groupings.closingStyle": {
          "enum": [
            "inline",
            "inner indentation",
            "outer indentation"
          ],
          "default": "inline"
        },
        "tsq-lsp-vscode.formatting.groupings.outerIndentTopLevelClose": {
          "type": "boolean",
          "default": true
        },
        "tsq-lsp-vscode.formatting.lists.maxInlineChildren": {
          "type": [
            "number",
            "null"
          ],
          "minimum": 0,
          "default": 2
        },
        "tsq-lsp-vscode.formatting.lists.closingStyle": {
          "enum": [
            "inline",
            "inner indentation",
            "outer indentation"
          ],
          "default": "inline"
        },
        "tsq-lsp-vscode.formatting.lists.outerIndentTopLevelClose": {
          "type": "boolean",
          "default": true
        },
        "tsq-lsp-vscode.formatting.namedNodes.maxInlineChildren": {
          "type": [
            "number",
            "null"
          ],
          "minimum": 0,
          "default": 2
        },
        "tsq-lsp-vscode.formatting.namedNodes.closingStyle": {
          "enum": [
            "inline",
            "inner indentation",
            "outer indentation"
          ],
          "default": "inline"
        },
        "tsq-lsp-vscode.formatting.namedNodes.outerIndentTopLevelClose": {
          "type": "boolean",
          "default": true
        },
        "tsq-lsp-vscode.formatting.predicates.maxInlineChildren": {
          "type": [
            "number",
            "null"
          ],
          "minimum": 0,
          "default": 2
        },
        "tsq-lsp-vscode.formatting.predicates.closingStyle": {
          "enum": [
            "inline",
            "inner indentation",
            "outer indentation"
          ],
          "default": "inline"
        },
        "tsq-lsp-vscode.formatting.predicates.outerIndentTopLevelClose": {
          "type": "boolean",
          "default": true
        }
      }
    }
  }
}